"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("./util");
/**
 * Configures Karma and Webpack to gather code-coverage data.
 */
function configureCoverage(config, { coverage, sourceDir }) {
    if (!coverage) {
        return config;
    }
    util_1.addPlugin(config, "karma-coverage-istanbul-reporter");
    if (!config.reporters.includes("coverage-istanbul")) {
        config.reporters.push("coverage-istanbul");
    }
    config.coverageIstanbulReporter = util_1.mergeConfig(config.coverageIstanbulReporter, {
        dir: "coverage/%browser%",
        reports: ["text-summary", "lcov"],
        skipFilesWithNoCoverage: true,
    });
    if (!util_1.hasWebpackLoader(config.webpack.module.rules, "coverage-istanbul-loader")) {
        config.webpack.module.rules.push({
            test: /\.(js|jsx|mjs)$/,
            include: new RegExp(sourceDir.replace(/\//g, "\/")),
            exclude: /node_modules|\.spec\.|\.test\./,
            enforce: "post",
            use: "coverage-istanbul-loader",
        });
    }
    return config;
}
exports.configureCoverage = configureCoverage;
//# sourceMappingURL=configure-coverage.js.map